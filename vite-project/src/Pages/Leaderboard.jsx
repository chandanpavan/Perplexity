import React, { useEffect, useState } from 'react';

const styles = {
┬а container: {
┬а ┬а minHeight: '100vh',
┬а ┬а background: 'linear-gradient(to bottom, #1a0024, #2a005a)',
┬а ┬а color: 'white',
┬а ┬а padding: '3rem',
┬а ┬а fontFamily: 'Poppins, sans-serif',
┬а },
┬а title: {
┬а ┬а fontSize: '2.5rem',
┬а ┬а color: '#e6c6ff',
┬а ┬а textAlign: 'center',
┬а ┬а marginBottom: '3rem',
┬а ┬а textShadow: '0 2px 10px #8a2be2',
┬а },
┬а table: {
┬а ┬а width: '100%',
┬а ┬а maxWidth: '900px',
┬а ┬а margin: '0 auto',
┬а ┬а borderCollapse: 'collapse',
┬а ┬а fontSize: '1rem',
┬а ┬а backgroundColor: '#240a3f',
┬а ┬а borderRadius: '10px',
┬а ┬а overflow: 'hidden',
┬а ┬а boxShadow: '0 0 20px rgba(155, 85, 255, 0.25)',
┬а },
┬а th: {
┬а ┬а padding: '1rem',
┬а ┬а textAlign: 'left',
┬а ┬а backgroundColor: '#2e1a4d',
┬а ┬а color: '#c889f5',
┬а ┬а borderBottom: '2px solid #a355f5',
┬а ┬а fontSize: '1.05rem',
┬а },
┬а td: {
┬а ┬а padding: '1rem',
┬а ┬а borderBottom: '1px solid #3a234d',
┬а ┬а color: '#f2e6ff',
┬а ┬а fontWeight: 400,
┬а },
┬а row: {
┬а ┬а transition: 'background 0.2s',
┬а },
┬а rowHover: {
┬а ┬а backgroundColor: '#3b2059',
┬а },
};

export default function Leaderboard() {
┬а const [users, setUsers] = useState([]);
┬а const [hoveredIndex, setHoveredIndex] = useState(null);

┬а useEffect(() => {
┬а ┬а fetch('http://localhost:5000/api/leaderboard')
┬а ┬а ┬а .then((res) => res.json())
┬а ┬а ┬а .then((data) => setUsers(data));
┬а }, []);

┬а const formatDate = (iso) => {
┬а ┬а if (!iso) return '-';
┬а ┬а return new Date(iso).toLocaleDateString("en-IN", {
┬а ┬а ┬а day: '2-digit',
┬а ┬а ┬а month: 'short',
┬а ┬а ┬а year: 'numeric',
┬а ┬а });
┬а };

┬а return (
┬а ┬а <div style={styles.container}>
┬а ┬а ┬а <h1 style={styles.title}>­ЪЈє Live Esports Leaderboard</h1>

┬а ┬а ┬а <table style={styles.table}>
┬а ┬а ┬а ┬а <thead>
┬а ┬а ┬а ┬а ┬а <tr>
┬а ┬а ┬а ┬а ┬а ┬а <th style={styles.th}>#</th>
┬а ┬а ┬а ┬а ┬а ┬а <th style={styles.th}>Player</th>
┬а ┬а ┬а ┬а ┬а ┬а <th style={styles.th}>XP</th>
┬а ┬а ┬а ┬а ┬а ┬а <th style={styles.th}>Kills</th>
┬а ┬а ┬а ┬а ┬а ┬а <th style={styles.th}>Placement</th>
┬а ┬а ┬а ┬а ┬а ┬а <th style={styles.th}>Last Update</th>
┬а ┬а ┬а ┬а ┬а </tr>
┬а ┬а ┬а ┬а </thead>
┬а ┬а ┬а ┬а <tbody>
┬а ┬а ┬а ┬а ┬а {users.map((u, i) => (
┬а ┬а ┬а ┬а ┬а ┬а <tr
┬а ┬а ┬а ┬а ┬а ┬а ┬а key={u.email}
┬а ┬а ┬а ┬а ┬а ┬а ┬а style={{
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а ...styles.row,
┬а ┬а ┬а ┬а ┬а ┬а ┬а ┬а backgroundColor: hoveredIndex === i ? styles.rowHover.backgroundColor : 'transparent',
┬а ┬а ┬а ┬а ┬а ┬а ┬а }}
┬а ┬а ┬а ┬а ┬а ┬а ┬а onMouseEnter={() => setHoveredIndex(i)}
┬а ┬а ┬а ┬а ┬а ┬а ┬а onMouseLeave={() => setHoveredIndex(null)}
┬а ┬а ┬а ┬а ┬а ┬а >
┬а ┬а ┬а ┬а ┬а ┬а ┬а <td style={styles.td}>#{i + 1}</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <td style={styles.td}>{u.name || u.email}</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <td style={styles.td}>{u.xp} ­ЪДа</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <td style={styles.td}>{u.totalKills || 0} ­ЪћФ</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <td style={styles.td}>{u.placementPoints || 0} ­ЪДЕ</td>
┬а ┬а ┬а ┬а ┬а ┬а ┬а <td style={styles.td}>{formatDate(u.lastUpdated)}</td>
┬а ┬а ┬а ┬а ┬а ┬а </tr>
┬а ┬а ┬а ┬а ┬а ))}
┬а ┬а ┬а ┬а </tbody>
┬а ┬а ┬а </table>
┬а ┬а </div>
┬а );
}
