import React, { useEffect, useState } from 'react';
import FriendChat from './FriendChat'; // âœ… Import component

export default function FriendList() {
Â  const token = localStorage.getItem('token');
Â  const [friends, setFriends] = useState([]);
Â  const [activeChat, setActiveChat] = useState(null);

Â  useEffect(() => {
Â  Â  fetch('http://localhost:5000/api/friends/list', {
Â  Â  Â  headers: { Authorization: `Bearer ${token}` },
Â  Â  })
Â  Â  Â  .then((res) => res.json())
Â  Â  Â  .then(setFriends);
Â  }, [token]);

Â  const toggleChat = (friend) => {
Â  Â  if (activeChat && activeChat._id === friend._id) {
Â  Â  Â  setActiveChat(null); // Toggle off
Â  Â  } else {
Â  Â  Â  setActiveChat(friend); // Set selected friend
Â  Â  }
Â  };

Â  return (
Â  Â  <div
Â  Â  Â  style={{
Â  Â  Â  Â  maxWidth: '1000px',
Â  Â  Â  Â  margin: '2rem auto',
Â  Â  Â  Â  padding: '1rem',
Â  Â  Â  Â  fontFamily: 'Poppins, sans-serif',
Â  Â  Â  Â  color: '#fff',
Â  Â  Â  }}
Â  Â  >
Â  Â  Â  <h2
Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  fontSize: '2.4rem',
Â  Â  Â  Â  Â  marginBottom: '2rem',
Â  Â  Â  Â  Â  color: '#ddb6ff',
Â  Â  Â  Â  Â  textAlign: 'center',
Â  Â  Â  Â  }}
Â  Â  Â  >
Â  Â  Â  Â  ðŸ‘¥ Your Friends
Â  Â  Â  </h2>

Â  Â  Â  {friends.length === 0 ? (
Â  Â  Â  Â  <p style={{ textAlign: 'center' }}>
Â  Â  Â  Â  Â  You donâ€™t have any friends yet ðŸ˜¢
Â  Â  Â  Â  </p>
Â  Â  Â  ) : (
Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  display: 'flex',
Â  Â  Â  Â  Â  Â  flexDirection: 'column',
Â  Â  Â  Â  Â  Â  gap: '1rem',
Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  >
Â  Â  Â  Â  Â  {friends.map((user, i) => {
Â  Â  Â  Â  Â  Â  const isActive = activeChat && activeChat._id === user._id;

Â  Â  Â  Â  Â  Â  return (
Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  key={i}
Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  background: isActive ? '#4a2f66' : '#3c235a',
Â  Â  Â  Â  Â  Â  Â  Â  Â  borderRadius: '12px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  padding: '1rem',
Â  Â  Â  Â  Â  Â  Â  Â  Â  boxShadow: isActive
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  ? '0 0 12px rgba(198,97,255,0.3)'
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  : '0 2px 4px rgba(0,0,0,0.2)',
Â  Â  Â  Â  Â  Â  Â  Â  Â  transition: 'all 0.3s',
Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  <div
Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  display: 'flex',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  justifyContent: 'space-between',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  alignItems: 'center',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  flexWrap: 'wrap',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  gap: '0.6rem',
Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  <span style={{ fontSize: '1rem', fontWeight: '500' }}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {user.email}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </span>
Â  Â  Â  Â  Â  Â  Â  Â  Â  <button
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  onClick={() => toggleChat(user)}
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  style={{
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  background: isActive ? '#8e3bff' : '#9355f5',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  color: '#fff',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  padding: '0.5rem 1.2rem',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  border: 'none',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  borderRadius: '6px',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  cursor: 'pointer',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  fontWeight: 600,
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  transition: 'all 0.2s',
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  }}
Â  Â  Â  Â  Â  Â  Â  Â  Â  >
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  {isActive ? 'ðŸ›‘ Close' : 'ðŸ’¬ Chat'}
Â  Â  Â  Â  Â  Â  Â  Â  Â  </button>
Â  Â  Â  Â  Â  Â  Â  Â  </div>

Â  Â  Â  Â  Â  Â  Â  Â  {isActive && (
Â  Â  Â  Â  Â  Â  Â  Â  Â  <div style={{ marginTop: '1rem' }}>
Â  Â  Â  Â  Â  Â  Â  Â  Â  Â  <FriendChat friend={user} />
Â  Â  Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  Â  Â  )}
Â  Â  Â  Â  Â  Â  Â  </div>
Â  Â  Â  Â  Â  Â  );
Â  Â  Â  Â  Â  })}
Â  Â  Â  Â  </div>
Â  Â  Â  )}
Â  Â  </div>
Â  );
}
